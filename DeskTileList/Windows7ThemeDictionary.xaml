<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

	<!-- Hover Brushes -->
	<LinearGradientBrush x:Key="HoverBackgroundBrushKey"
						 StartPoint="0,0"
						 EndPoint="0,1">
		<GradientStop Color="#DDFCFCFC"
					  Offset="0" />
		<GradientStop Color="#DDEBF3FD"
					  Offset="1" />
	</LinearGradientBrush>
	<SolidColorBrush x:Key="HoverOuterBorderBrushKey"
					 Color="#B8D6FB" />
	<SolidColorBrush x:Key="HoverInnerBorderBrushKey"
					 Color="#F2F7FE" />

	<!-- Selected (Active) Brushes -->
	<LinearGradientBrush x:Key="SelectedActiveBackgroundBrushKey"
						 StartPoint="0,0"
						 EndPoint="0,1">
		<GradientStop Color="#DCEBFC"
					  Offset="0" />
		<GradientStop Color="#C1DBFC"
					  Offset="1" />
	</LinearGradientBrush>
	<SolidColorBrush x:Key="SelectedActiveOuterBorderBrushKey"
					 Color="#7DA2CE" />
	<SolidColorBrush x:Key="SelectedActiveInnerBorderBrushKey"
					 Color="#EBF4FD" />

	<!-- Selected (Inactive) Brushes -->
	<LinearGradientBrush x:Key="SelectedInactiveBackgroundBrushKey"
						 StartPoint="0,0"
						 EndPoint="0,1">
		<GradientStop Color="#F8F8F8"
					  Offset="0" />
		<GradientStop Color="#E5E5E5"
					  Offset="1" />
	</LinearGradientBrush>
	<SolidColorBrush x:Key="SelectedInactiveOuterBorderBrushKey"
					 Color="#D9D9D9" />
	<SolidColorBrush x:Key="SelectedInactiveInnerBorderBrushKey"
					 Color="#F0F0F0" />

	<!-- ListBoxItem Style -->
	<Style x:Key="{x:Type ListBoxItem}"
		   TargetType="{x:Type ListBoxItem}">

		<Setter Property="BorderThickness"
				Value="1" />
        <Setter Property="Margin" Value="7"/>
        <Setter Property="Padding"
				Value="2,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Grid>
						<Border x:Name="outerBorder"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="2"
								SnapsToDevicePixels="true">
							<Border x:Name="innerBorder"
									Background="{TemplateBinding Background}"
									BorderThickness="1"
									CornerRadius="1"
									Padding="{TemplateBinding Padding}"
									SnapsToDevicePixels="true">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Border>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter TargetName="outerBorder"
									Property="BorderBrush"
									Value="{StaticResource HoverOuterBorderBrushKey}" />
							<Setter TargetName="innerBorder"
									Property="Background"
									Value="{StaticResource HoverBackgroundBrushKey}" />
							<Setter TargetName="innerBorder"
									Property="BorderBrush"
									Value="{StaticResource HoverInnerBorderBrushKey}" />
						</Trigger>
						<Trigger Property="IsSelected"
								 Value="true">
							<Setter TargetName="outerBorder"
									Property="BorderBrush"
									Value="{StaticResource SelectedActiveOuterBorderBrushKey}" />
							<Setter TargetName="innerBorder"
									Property="Background"
									Value="{StaticResource SelectedActiveBackgroundBrushKey}" />
							<Setter TargetName="innerBorder"
									Property="BorderBrush"
									Value="{StaticResource SelectedActiveInnerBorderBrushKey}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true" />
								<Condition Property="Selector.IsSelectionActive"
										   Value="false" />
							</MultiTrigger.Conditions>
							<Setter TargetName="outerBorder"
									Property="BorderBrush"
									Value="{StaticResource SelectedInactiveOuterBorderBrushKey}" />
							<Setter TargetName="innerBorder"
									Property="Background"
									Value="{StaticResource SelectedInactiveBackgroundBrushKey}" />
							<Setter TargetName="innerBorder"
									Property="BorderBrush"
									Value="{StaticResource SelectedInactiveInnerBorderBrushKey}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled"
								 Value="false">
							<Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ListViewItem Style -->
	<Style x:Key="{x:Type ListViewItem}"
		   TargetType="{x:Type ListViewItem}"
		   BasedOn="{StaticResource {x:Type ListBoxItem}}" />

	<!-- Supporting TreeViewItem Resources -->
	<PathGeometry x:Key="TreeArrow">
		<PathGeometry.Figures>
			<PathFigureCollection>
				<PathFigure IsFilled="True"
							StartPoint="0 0"
							IsClosed="True">
					<PathFigure.Segments>
						<PathSegmentCollection>
							<LineSegment Point="0 6" />
							<LineSegment Point="6 0" />
						</PathSegmentCollection>
					</PathFigure.Segments>
				</PathFigure>
			</PathFigureCollection>
		</PathGeometry.Figures>
	</PathGeometry>
	<Style x:Key="ExpandCollapseToggleStyle"
		   TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable"
				Value="False" />
		<Setter Property="Width"
				Value="16" />
		<Setter Property="Height"
				Value="16" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Width="16"
							Height="16"
							Background="Transparent"
							Padding="5,5,5,5">
						<Path x:Name="ExpandPath"
							  Fill="Transparent"
							  Stroke="#FF989898"
							  Data="{StaticResource TreeArrow}">
							<Path.RenderTransform>
								<RotateTransform Angle="135"
												 CenterX="3"
												 CenterY="3" />
							</Path.RenderTransform>
						</Path>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="True">
							<Setter TargetName="ExpandPath"
									Property="Stroke"
									Value="#FF1BBBFA" />
							<Setter TargetName="ExpandPath"
									Property="Fill"
									Value="Transparent" />
						</Trigger>

						<Trigger Property="IsChecked"
								 Value="True">
							<Setter TargetName="ExpandPath"
									Property="RenderTransform">
								<Setter.Value>
									<RotateTransform Angle="180"
													 CenterX="3"
													 CenterY="3" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="ExpandPath"
									Property="Fill"
									Value="#FF595959" />
							<Setter TargetName="ExpandPath"
									Property="Stroke"
									Value="#FF262626" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- TreeViewItem Style -->
	<Style x:Key="{x:Type TreeViewItem}"
		   TargetType="{x:Type TreeViewItem}">
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="Padding"
				Value="2,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition MinWidth="19"
											  Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition />
						</Grid.RowDefinitions>
						<ToggleButton x:Name="expander"
									  Style="{StaticResource ExpandCollapseToggleStyle}"
									  IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
									  ClickMode="Press" />
						<Border x:Name="outerBorder"
								Grid.Column="1"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="2"
								SnapsToDevicePixels="true">
							<Border x:Name="innerBorder"
									Background="{TemplateBinding Background}"
									BorderThickness="1"
									CornerRadius="1"
									Padding="{TemplateBinding Padding}"
									SnapsToDevicePixels="true">
								<ContentPresenter x:Name="PART_Header"
												  ContentSource="Header"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Border>
						</Border>
						<ItemsPresenter x:Name="itemsHost"
										Grid.Row="1"
										Grid.Column="1"
										Grid.ColumnSpan="2" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded"
								 Value="false">
							<Setter TargetName="itemsHost"
									Property="Visibility"
									Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasItems"
								 Value="false">
							<Setter TargetName="expander"
									Property="Visibility"
									Value="Hidden" />
						</Trigger>
						<Trigger SourceName="outerBorder"
								 Property="IsMouseOver"
								 Value="true">
							<Setter TargetName="outerBorder"
									Property="BorderBrush"
									Value="{StaticResource HoverOuterBorderBrushKey}" />
							<Setter TargetName="innerBorder"
									Property="Background"
									Value="{StaticResource HoverBackgroundBrushKey}" />
							<Setter TargetName="innerBorder"
									Property="BorderBrush"
									Value="{StaticResource HoverInnerBorderBrushKey}" />
						</Trigger>
						<Trigger Property="IsSelected"
								 Value="true">
							<Setter TargetName="outerBorder"
									Property="BorderBrush"
									Value="{StaticResource SelectedActiveOuterBorderBrushKey}" />
							<Setter TargetName="innerBorder"
									Property="Background"
									Value="{StaticResource SelectedActiveBackgroundBrushKey}" />
							<Setter TargetName="innerBorder"
									Property="BorderBrush"
									Value="{StaticResource SelectedActiveInnerBorderBrushKey}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true" />
								<Condition Property="Selector.IsSelectionActive"
										   Value="false" />
							</MultiTrigger.Conditions>
							<Setter TargetName="outerBorder"
									Property="BorderBrush"
									Value="{StaticResource SelectedInactiveOuterBorderBrushKey}" />
							<Setter TargetName="innerBorder"
									Property="Background"
									Value="{StaticResource SelectedInactiveBackgroundBrushKey}" />
							<Setter TargetName="innerBorder"
									Property="BorderBrush"
									Value="{StaticResource SelectedInactiveInnerBorderBrushKey}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled"
								 Value="false">
							<Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="#DDFFFFFF" 
                              Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="VerticalScrollBarBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#E1E1E1" Offset="0"/>
        <GradientStop Color="#EDEDED" Offset="0.20"/>
        <GradientStop Color="#EDEDED" Offset="0.80"/>
        <GradientStop Color="#E3E3E3" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    
                    <Border BorderThickness="2" Background="#DDFFFFFF" Opacity=".7" Width="10" CornerRadius="4">
                       
                    </Border>
                    <!--<Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsDragging}" SnapsToDevicePixels="true" Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}"/>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
			<Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}"/>
			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Width" Value="15"/>
			<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}">
						<Grid x:Name="Bg" Background="Transparent" SnapsToDevicePixels="true">
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
								<RowDefinition Height="0.00001*"/>
								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
							</Grid.RowDefinitions>
                        <RepeatButton Visibility="Visible" Content="M 0 4 L 8 4 L 4 0 Z" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="UpArrow">
                            
                        </RepeatButton>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
								<Track.DecreaseRepeatButton>
									<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb Style="{StaticResource ScrollBarThumb}" Themes:ScrollChrome.ScrollGlyph="VerticalGripper"/>
								</Track.Thumb>
							</Track>
                        <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Content="M 0 0 L 4 4 L 8 0 Z" Grid.Row="2" Style="{StaticResource ScrollBarButton}" Themes:ScrollChrome.ScrollGlyph="DownArrow"/>
                    </Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			
		</Style>

</ResourceDictionary>